{
    "contents" : "observed_staggered = read.table('./results/val-mock-community-2015-12-28/mock_community_staggered.csv', quote='\"', header=T, sep=\",\", na.strings='')\nexpected_staggered = read.table('./results/val-mock-community-2015-12-28/mock_community_staggered_expected.csv', quote='\"', header=T, sep=\",\")\n\nobserved_even = read.table('./results/val-mock-community-2015-12-28/mock_community_even.csv', quote='\"', header=T, sep=\",\", na.strings='')\nexpected_even = read.table('./results/val-mock-community-2015-12-28/mock_community_even_expected.csv', quote='\"', header=T, sep=\",\")\n\nobserved_simulated = read.table('./results/val-sim-12-30-2015/simulated_100000000.csv', quote='\"', header=T, sep=\",\", na.strings='')\nexpected_simulated = read.table('./results/val-sim-12-30-2015/expected_counts.csv', quote='\"', header=T, sep=\",\", na.strings='')\n\ngene_lengths = read.table('./results/genome-lengths-12-31-2015/database_lengths.csv', quote='\"', header=T, sep=\",\", na.strings='')\n\n# columns to paste together\ncol_names <- c('domain', 'genus', 'species')\n\ncollapse = function(data, cols, name='name') {\n    # create a new column `x` with the three columns collapsed together\n    data$name <- apply( data[ , cols ] , 1 , paste , collapse = \"-\" )\n    \n    # remove the unnecessary rows\n    data <- data[ , !( names( data ) %in% cols ) ]\n}\n\nmake_correlation_plots = function(truth, observed, gene_lengths, name) {\n    gene_lengths = collapse(gene_lengths, col_names)\n    truth = collapse(truth, col_names)\n    observed = collapse(observed, col_names)\n    \n    all = merge(truth, observed, by='name')\n    all = merge(all, gene_lengths, by='name')\n    \n    # all$count.y = all$count.y/all$length\n    \n    all$relative.x = all$count.x/sum(all$count.x)\n    all$relative.y = all$count.y/sum(all$count.y)\n    \n    pdf(paste('docs/', 'gene_length_', name, '.pdf', sep = ''))\n    plot(log(all$length), (all$relative.x - all$relative.y), xlab='Number of BPs in Database', ylab='Error', main='Gene Length Bias')\n    abline(0, 0, col='red')\n    dev.off()\n    \n    pdf(paste('docs/', 'ratio_', name, '.pdf', sep = ''))\n    plot(all$relative.x, all$relative.y, xlab='Expected', ylab='Observed', main='Ratio of Observed/Expected')\n    abline(0, 1, col='red')\n    dev.off()\n    \n    cor(all$relative.x, all$relative.y)\n}\n\nmake_correlation_plots(expected_staggered, observed_staggered, gene_lengths, 'expected_staggered_species')\nmake_correlation_plots(expected_even, observed_even, gene_lengths, 'expected_even_species')\nmake_correlation_plots(observed_simulated, expected_simulated, gene_lengths, 'expected_simulated_species')\n\nmake_correlation_genus_plots = function(truth, observed, gene_lengths, name) {\n    gene_lengths = tapply(gene_lengths$length, gene_lengths$genus, FUN=sum)\n    truth = tapply(truth$count, truth$genus, FUN=sum)\n    observed = tapply(observed$count, observed$genus, FUN=sum)\n    \n    gene_lengths = data.frame('length'=as.integer(gene_lengths), 'genus'=names(gene_lengths))\n    truth = data.frame('count'=as.integer(truth), 'genus'=names(truth))\n    observed = data.frame('count'=as.integer(observed), 'genus'=names(observed))\n    \n    all = merge(truth, observed, by='genus')\n    all = merge(all, gene_lengths, by='genus')\n    \n    # all$count.y = all$count.y/all$length\n    \n    all$relative.x = all$count.x/sum(all$count.x)\n    all$relative.y = all$count.y/sum(all$count.y)\n    \n    pdf(paste('docs/', 'gene_length_', name, '.pdf', sep = ''))\n    plot(log(all$length), (all$relative.x - all$relative.y), xlab='Number of BPs in Database', ylab='Error', main='Genus Gene Length Bias')\n    abline(0, 0, col='red')\n    dev.off()\n    pdf(paste('docs/', 'ratio_', name, '.pdf', sep = ''))\n    plot(all$relative.x, all$relative.y, xlab='Expected', ylab='Observed', main='Genus ratio of Observed/Expected')\n    abline(0, 1, col='red')\n    dev.off()\n    cor(all$relative.x, all$relative.y)\n}\n\nmake_correlation_genus_plots(expected_staggered, observed_staggered, gene_lengths, 'expected_staggered_genus')\nmake_correlation_genus_plots(expected_even, observed_even, gene_lengths, 'expected_even_genus')\nmake_correlation_genus_plots(observed_simulated, expected_simulated, gene_lengths, 'expected_simulated_genus')\n",
    "created" : 1463061516248.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "68211377",
    "id" : "4F16B88",
    "lastKnownWriteTime" : 1460400714,
    "path" : "B:/Projects/NINJA-SHOGUN/src/bin/validation_relative_abundances.R",
    "project_path" : "src/bin/validation_relative_abundances.R",
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "type" : "r_source"
}